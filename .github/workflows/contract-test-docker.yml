name: Contract Test with Docker
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  contract-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Start gRPC server
        run: |
          nohup ./gradlew bootRun > grpc-server.log 2>&1 &
          echo $! > grpc-server.pid

      - name: Wait for gRPC server
        run: |
          echo "Waiting for gRPC server..."
          for i in {1..60}; do
            if nc -z localhost 9090; then
              echo "gRPC server is ready"
              sleep 5  # Extra time for full initialization
              break
            fi
            if [ $i -eq 60 ]; then
              echo "gRPC server failed to start"
              cat grpc-server.log
              exit 1
            fi
            sleep 2
          done

      - name: Create reports directory
        run: mkdir -p build/reports/specmatic

      - name: Run Specmatic contract tests
        run: |
          docker run --network host \
            -v "${{ github.workspace }}/specmatic.yaml:/usr/src/app/specmatic.yaml" \
            -v "${{ github.workspace }}/build/reports/specmatic:/usr/src/app/build/reports/specmatic" \
            -v "$PWD/src/test/resources/specmatic:/usr/src/app/examples" \
            -e SPECMATIC_GENERATIVE_TESTS=true \
            specmatic/specmatic-grpc test --protoc-version="3.23.4" --port=9090 --host=localhost --examples=examples

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: contract-test-reports
          path: build/reports/specmatic/

      - name: Show gRPC server logs on failure
        if: failure()
        run: cat grpc-server.log || echo "No gRPC server logs found"

      - name: Stop gRPC server
        if: always()
        run: |
          if [ -f grpc-server.pid ]; then
            kill $(cat grpc-server.pid) || true
          fi
          pkill -f 'bootRun' || true
          sleep 2
          pkill -9 -f 'bootRun' || true

